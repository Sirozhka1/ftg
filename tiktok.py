"""
    Copyright 2021 t.me/innocoffee
    Licensed under the Apache License, Version 2.0
    
    Author is not responsible for any consequencies caused by using this
    software or any of its parts. If you have any questions or wishes, feel
    free to contact Dan by sending pm to @innocoffee_alt.
"""

#<3 title: TikTok
#<3 pic: https://img.icons8.com/fluency/48/000000/tiktok.png
#<3 desc: –°–∫–∞—á–∏–≤–∞–µ—Ç –≤–∏–¥–æ—Å—ã –∏–∑ –¢–∏–∫–¢–æ–∫ –±–µ–∑ watermark

from .. import loader, utils
import asyncio

class TikTokMod(loader.Module):
    """–°–∫–∞—á–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ –∏–∑ TikTok –±–µ–∑ watermark"""
    strings = {'name': 'TikTok', 
    'loading': "<b>ü¶ä –ü–æ–¥–≥—Ä—É–∂–∞—é –≤–∏–¥–æ—Å–∏–∫ —Å –¢–∏–∫–¢–æ–∫–∞</b>", 
    'no_link': "<b>ü¶ä –¢—ã –Ω–µ —É–∫–∞–∑–∞–ª —Å—Å—ã–ª–∫—É</b>"}

    async def ttcmd(self, message):
        """<link> - –°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ —Å –¢–∏–∫–¢–æ–∫ –±–µ–∑ —Ä–µ–∫–ª–∞–º—ã"""
        await utils.answer(message, self.strings('loading', message))
        args = utils.get_args_raw(message)
        if not args:
            await utils.answer(message, self.strings('no_link', message))
            await asyncio.sleep(3)
            await message.delete()
            return

        cb_query = await message.client.inline_query('tikdobot', args)
        await message.client.send_file(message.to_id, cb_query[1].result.content.url)
        await message.delete()
