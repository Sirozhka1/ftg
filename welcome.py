"""
    Copyright 2021 t.me/innocoffee
    Licensed under the Apache License, Version 2.0
    
    Author is not responsible for any consequencies caused by using this
    software or any of its parts. If you have any questions or wishes, feel
    free to contact Dan by sending pm to @innocoffee_alt.
"""

#<3 title: Welcome
#<3 pic: https://img.icons8.com/fluency/48/000000/enter-2.png
#<3 desc: –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–æ–≤


from .. import loader, utils


@loader.tds
class WelcomeMod(loader.Module):
	"""–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —á–∞—Ç–µ."""
	strings = {'name': 'Welcome',
	'welcome': 'ü¶ä <b>–¢–µ–ø–µ—Ä—å —è –±—É–¥—É –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –∑–¥–µ—Å—å –ª—é–¥–µ–π</b>', 
	'chat_not_found': 'ü¶ä <b>–Ø –Ω–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –ª—é–¥–µ–π –≤ —ç—Ç–æ–º —á–∞—Ç–µ</b>', 
	'unwelcome': 'ü¶ä <b>–¢–µ–ø–µ—Ä—å —è –Ω–µ –±—É–¥—É –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –∑–¥–µ—Å—å –ª—é–¥–µ–π</b>'}

	async def client_ready(self, client, db):
		self.db = db
		self.client = client
		self.welcome = db.get('Welcome', 'welcome', {})

	async def welcomecmd(self, message):
		"""–í–∫–ª—é—á–∏—Ç—å \\ –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ —Ç–µ–∫—É—â–µ–º —á–∞—Ç–µ"""
		cid = utils.get_chat_id(message)
		args = utils.get_args_raw(message)
		
		self.welcome[cid] = args
		self.db.set('Welcome', 'welcome', self.welcome)
		await utils.answer(message, self.strings('welcome', message))

	async def unwelcomecmd(self, message):
		"""–û—Ç–∫–ª—é—á–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ —Ç–µ–∫—É—â–µ–º —á–∞—Ç–µ"""
		cid = utils.get_chat_id(message)
		args = utils.get_args_raw(message)
		
		if cid not in self.welcome:
			await utils.answer(message, self.strings('chat_not_found', message))
			return

		del self.welcome[cid]
		self.db.set('Welcome', 'welcome', self.welcome)
		await utils.answer(message, self.strings('unwelcome', message))

	async def watcher(self, message):
		# try:
		cid = utils.get_chat_id(message)
		if cid not in self.welcome:
			return

		if getattr(message, "user_joined", False) or getattr(message, "user_added", False):
			user = await message.get_user()
			chat = await message.get_chat()
			await self.client.send_message(cid, self.welcome[cid].replace('{user}', user.first_name).replace('{chat}', chat.title).replace('{mention}', '<a href="tg://user?id=' + str(user.id) + '">' + user.first_name + '</a>'))
			await message.delete()